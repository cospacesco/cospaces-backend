swagger: "2.0"
info:
  version: "0.0.1"
  title: CoSpaces Backend
host: localhost:10010
basePath: /api
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json

paths:
  /users:
    # x-swagger-router-controller: hello_world

    get:
      tags: 
        - users
      description: Returns all users
      # operationId: 
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AllUsers"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      tags: 
        - users
      description: Create a new user
      # operationId: 
      parameters:
        - name: user
          in: body
          description: User object that needs to be created
          required: true
          schema:
            $ref: '#/definitions/NewUser'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/NewUser"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /users/{id}:
    # x-swagger-router-controller: hello_world
    
    get:
      tags: 
        - users
      description: Returns single user by id
      # operationId: 
      parameters:
        - name: id
          in: path
          description: The id of the user to be fetched
          required: true
          type: number
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      tags: 
        - users
      description: Update an existing user
      # operationId: 
      parameters:
        - name: id
          in: path
          description: The id of the user to be updated
          required: true
          type: number
        - name: user
          in: body
          description: User object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      tags: 
        - users
      description: Delete single user by id
      # operationId: 
      parameters:
        - name: id
          in: path
          description: The id of the user to be deleted
          required: true
          type: number
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /users/findByUsername/{username}:
    # x-swagger-router-controller: hello_world

    get:
      tags: 
        - users
      description: Returns single user by username
      # operationId: 
      parameters:
        - name: username
          in: path
          description: The username of the user to be fetched
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /cospaces:
    # x-swagger-router-controller: hello_world

    get:
      tags: 
        - cospaces
      description: Returns all CoSpaces
      # operationId: 
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AllCoSpaces"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      tags: 
        - cospaces
      description: Create a new CoSpace
      # operationId: 
      parameters:
        - name: cospace
          in: body
          description: CoSpace object that needs to be created
          required: true
          schema:
            $ref: '#/definitions/NewCoSpace'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/NewCoSpace"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /cospaces/{id}:
    # x-swagger-router-controller: hello_world

    get:
      tags: 
        - cospaces
      description: Returns single CoSpace by id
      # operationId: 
      parameters:
        - name: id
          in: path
          description: The id of the CoSpace to be fetched
          required: true
          type: number
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CoSpace"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      tags: 
        - cospaces
      description: Update an existing CoSpace
      # operationId: 
      parameters:
        - name: id
          in: path
          description: The id of the CoSpace to be updated
          required: true
          type: number
        - name: cospace
          in: body
          description: CoSpace object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/CoSpace'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CoSpace"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      tags: 
        - cospaces
      description: Delete single CoSpace by id
      # operationId: 
      parameters:
        - name: id
          in: path
          description: The id of the CoSpace to be deleted
          required: true
          type: number
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CoSpace"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /cospaces/findBySlug/{slug}:
    # x-swagger-router-controller: hello_world

    get:
      tags: 
        - cospaces
      description: Returns single CoSpace by slug
      # operationId: 
      parameters:
        - name: slug
          in: path
          description: The slug of the CoSpace to be fetched
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CoSpace"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /projects:
    # x-swagger-router-controller: hello_world

    get:
      tags: 
        - projects
      description: Returns all projects
      # operationId: 
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AllProjects"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      tags: 
        - projects
      description: Create a new Project
      # operationId: 
      parameters:
        - name: project
          in: body
          description: Project object that needs to be created
          required: true
          schema:
            $ref: '#/definitions/NewProject'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/NewProject"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /projects/{id}:
    # x-swagger-router-controller: hello_world

    get:
      tags: 
        - projects
      description: Returns single project by id
      # operationId: 
      parameters:
        - name: id
          in: path
          description: The id of the project to be fetched
          required: true
          type: number
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Project"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      tags: 
        - projects
      description: Update an existing Project
      # operationId: 
      parameters:
        - name: id
          in: path
          description: The id of the Project to be updated
          required: true
          type: number
        - name: project
          in: body
          description: Project object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Project"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      tags: 
        - projects
      description: Delete single Project by id
      # operationId: 
      parameters:
        - name: id
          in: path
          description: The id of the Project to be deleted
          required: true
          type: number
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Project"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /tasks:
    # x-swagger-router-controller: hello_world

    get:
      tags: 
        - tasks
      description: Returns all tasks
      # operationId: 
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AllTasks"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      tags: 
        - tasks
      description: Create a new Task
      # operationId: 
      parameters:
        - name: task
          in: body
          description: Task object that needs to be created
          required: true
          schema:
            $ref: '#/definitions/NewTask'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/NewTask"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /tasks/{id}:
    # x-swagger-router-controller: hello_world

    get:
      tags: 
        - tasks
      description: Returns single task by id
      # operationId: 
      parameters:
        - name: id
          in: path
          description: The id of the task to be fetched
          required: true
          type: number
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Task"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      tags: 
        - tasks
      description: Update an existing Task
      # operationId: 
      parameters:
        - name: id
          in: path
          description: The id of the Task to be updated
          required: true
          type: number
        - name: task
          in: body
          description: Task object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/Task'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Task"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      tags: 
        - tasks
      description: Delete single Task by id
      # operationId: 
      parameters:
        - name: id
          in: path
          description: The id of the Task to be deleted
          required: true
          type: number
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Task"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /sub-tasks:
    # x-swagger-router-controller: hello_world

    get:
      tags: 
        - sub-tasks
      description: Returns all sub-tasks
      # operationId: 
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AllSubTasks"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      tags: 
        - sub-tasks
      description: Create a new SubTask
      # operationId: 
      parameters:
        - name: sub-task
          in: body
          description: SubTask object that needs to be created
          required: true
          schema:
            $ref: '#/definitions/NewSubTask'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/NewSubTask"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /sub-tasks/{id}:
    # x-swagger-router-controller: hello_world

    get:
      tags: 
        - sub-tasks
      description: Returns single sub-task by id
      # operationId: 
      parameters:
        - name: id
          in: path
          description: The id of the sub-task to be fetched
          required: true
          type: number
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SubTask"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      tags: 
        - sub-tasks
      description: Update an existing SubTask
      # operationId: 
      parameters:
        - name: id
          in: path
          description: The id of the SubTask to be updated
          required: true
          type: number
        - name: sub-task
          in: body
          description: SubTask object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/SubTask'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SubTask"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw
    
definitions:
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
        example: Error Message

  AllUsers:
    type: array
    items:
      $ref: "#/definitions/UserSlim"

  AllCoSpaces:
    type: array
    items:
      $ref: "#/definitions/CoSpaceSlim"

  AllProjects:
    type: array
    items:
      $ref: "#/definitions/ProjectSlim"

  AllTasks:
    type: array
    items:
      $ref: "#/definitions/TaskSlim"

  AllSubTasks:
    type: array
    items:
      $ref: "#/definitions/SubTaskSlim"

  User:
    properties:
      id:
        type: integer
        example: 1000
      username:
        type: string
        example: sebastiantf
      email:
        type: string
        example: sebastian.tharakan97@gmail.com
      profile_picture:
        type: string
        example: https://domain.com/path/to/profilepic
      coSpaces:
        type: array
        items:
          $ref: "#/definitions/CoSpace"
  
  UserSlim:
    properties:
      id:
        type: integer
        example: 1000
      username:
        type: string
        example: sebastiantf
      email:
        type: string
        example: sebastian.tharakan97@gmail.com
      profile_picture:
        type: string
        example: https://domain.com/path/to/profilepic

  NewUser:
    properties:
      id:
        type: integer
        example: 1000
      username:
        type: string
        example: sebastiantf
      email:
        type: string
        example: sebastian.tharakan97@gmail.com
      profile_picture:
        type: string
        example: https://domain.com/path/to/profilepic
      coSpaces:
        type: array
        items:
          $ref: "#/definitions/CoSpaceSlim"
        example: []

  CoSpace:
    properties:
      id:
        type: integer
        example: 1000
      slug:
        type: string
        example: cospace-a
      name:
        type: string
        example: CoSpace A
      picture:
        type: string
        example: https://domain.com/path/to/cospace_pic
      lead_user:
        $ref: "#/definitions/UserSlim"
      members:
        type: array
        items:
          $ref: "#/definitions/UserSlim"
      projects:
        type: array
        items:
          $ref: "#/definitions/Project"

  CoSpaceSlim:
    properties:
      id:
        type: integer
        example: 1000
      slug:
        type: string
        example: cospace-a
      name:
        type: string
        example: CoSpace A
      picture:
        type: string
        example: https://domain.com/path/to/cospace_pic
      lead_user:
        $ref: "#/definitions/UserSlim"

  NewCoSpace:
    properties:
      id:
        type: integer
        example: 1000
      slug:
        type: string
        example: cospace-a
      name:
        type: string
        example: CoSpace A
      picture:
        type: string
        example: https://domain.com/path/to/cospace_pic
      lead_user:
        $ref: "#/definitions/UserSlim"
      members:
        type: array
        items:
          $ref: "#/definitions/UserSlim"
        example: []
      projects:
        type: array
        items:
          $ref: "#/definitions/Project"
        example: []

  Project:
    properties:
      id:
        type: integer
        example: 1000
      slug:
        type: string
        example: project-a
      name:
        type: string
        example: Project A
      picture:
        type: string
        example: https://domain.com/path/to/project_pic
      tasks:
        type: array
        items:
          $ref: "#/definitions/Task"
      github_repo_url:
        type: string
        example: https://github.com/username/repo

  ProjectSlim:
    properties:
      id:
        type: integer
        example: 1000
      slug:
        type: string
        example: project-a
      name:
        type: string
        example: Project A
      picture:
        type: string
        example: https://domain.com/path/to/project_pic
      github_repo_url:
        type: string
        example: https://github.com/username/repo

  NewProject:
    properties:
      id:
        type: integer
        example: 1000
      slug:
        type: string
        example: project-a
      name:
        type: string
        example: Project A
      picture:
        type: string
        example: https://domain.com/path/to/project_pic
      tasks:
        type: array
        items:
          $ref: "#/definitions/Task"
        example: []
      github_repo_url:
        type: string
        example: https://github.com/username/repo

  Task:
    properties:
      id:
        type: integer
        example: 1000
      name:
        type: string
        example: Task A
      sub_tasks:
        type: array
        items:
          $ref: "#/definitions/SubTask"

  TaskSlim:
    properties:
      id:
        type: integer
        example: 1000
      name:
        type: string
        example: Task A
      sub_tasks:
        type: array
        items:
          $ref: "#/definitions/SubTaskSlim"

  NewTask:
    properties:
      id:
        type: integer
        example: 1000
      name:
        type: string
        example: Task A
      sub_tasks:
        type: array
        items:
          $ref: "#/definitions/SubTask"
        example: []

  SubTask:
    properties:
      id:
        type: integer
        example: 1000
      name:
        type: string
        example: Sub-Task A
      engagements:
        type: array
        items:
          $ref: "#/definitions/EngagementSlim"
      github_issue_url:
        type: string
        example: https://github.com/username/repo/issues/1

  SubTaskSlim:
    properties:
      id:
        type: integer
        example: 1000
      name:
        type: string
        example: Sub-Task A
      github_issue_url:
        type: string
        example: https://github.com/username/repo/issues/1

  NewSubTask:
    properties:
      id:
        type: integer
        example: 1000
      name:
        type: string
        example: Sub-Task A
      engagements:
        type: array
        items:
          $ref: "#/definitions/EngagementSlim"
        example: []
      github_issue_url:
        type: string
        example: https://github.com/username/repo/issues/1
